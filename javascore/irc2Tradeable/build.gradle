version = '0.1.0'

dependencies {
    compileOnly("foundation.icon:javaee-api:$javaeeVersion")
    implementation("foundation.icon:javaee-scorex:$scorexVersion")
    implementation project(':score-util')
    implementation project(':lib')
    implementation("com.github.sink772:javaee-tokens:0.6.0")

    testImplementation("org.junit.jupiter:junit-jupiter-api:5.7.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.2")

    testImplementation("foundation.icon:javaee-unittest:$javaeeUnittestVersion")
    testImplementation project(':test-lib')
    testAnnotationProcessor("foundation.icon:javaee-score-client:$scoreClientVersion")
    testImplementation("foundation.icon:javaee-score-client:$scoreClientVersion")
    testImplementation("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")
    testImplementation("foundation.icon:icon-sdk:$iconsdkVersion")
    testImplementation("com.github.javafaker:javafaker:1.0.2")
}

optimizedJar {
    mainClassName = 'foundation.icon.btp.irc2Tradeable.IRC2Tradeable'
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } { exclude "score/*" }
    enableDebug = debugJar
}

deployJar {
    endpoints {
        gangnam {
            uri = 'https://gicon.net.solidwallet.io/api/v3'
            nid = 7
        }
        local {
            uri = 'http://localhost:9082/api/v3'
            nid = 3
        }
    }
    keystore = rootProject.hasProperty('keystoreName') ? "$keystoreName" : ''
    password = rootProject.hasProperty('keystorePass') ? "$keystorePass" : ''
    parameters {[
            arg('_name', 'DEV'),
            arg('_symbol', 'DEV'),
            arg('_decimals', '18')
        ]
    }
}

test {
    useJUnitPlatform {
        if (!integrationTest) {
            excludeTags("integration")
        }
    }
    options {
        print "default: " + scoreTest
        print "params: " + project.extensions.deployJar.arguments[0].value
        testLogging.showStandardStreams = true
        testLogging.exceptionFormat = "full"
        systemProperty 'url', scoreTest.url
        systemProperty 'nid', scoreTest.nid
        systemProperty 'keyStore', scoreTest.default.keyStore
        systemProperty 'keyPassword', scoreTest.default.resolvedKeyPassword
        // systemProperty 'address', "cx5a1ff01bffd148df8bc57e74227eeb7c1d868623"
//        systemProperty 'isUpdate', "true"
        dependsOn optimizedJar
        systemProperty 'scoreFilePath', project.tasks.optimizedJar.outputJarName
        project.extensions.deployJar.arguments.each {
            arg -> systemProperty 'params.'+arg.name, arg.value
        }

        systemProperty 'tester.keyStore', scoreTest.tester.keyStore
        systemProperty 'tester.keyPassword', scoreTest.tester.keyPassword

        systemProperty 'irc2.url', scoreTest.url
        systemProperty 'irc2.nid', scoreTest.nid
        systemProperty 'irc2.keyStore', scoreTest.default.keyStore
        systemProperty 'irc2.keyPassword', scoreTest.default.keyPassword
        systemProperty 'irc2.scoreFilePath', project.tasks.optimizedJar.outputJarName
        project.extensions.deployJar.arguments.each {
            arg -> systemProperty 'irc2.params.'+arg.name, arg.value
        }
    }
}
